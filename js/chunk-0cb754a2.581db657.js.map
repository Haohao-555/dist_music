{"version":3,"sources":["webpack:///./src/pages/Ranking.vue?4b16","webpack:///./src/network/url.js","webpack:///./src/pages/Ranking.vue?cc17","webpack:///src/pages/Ranking.vue","webpack:///./src/pages/Ranking.vue?03fc","webpack:///./src/pages/Ranking.vue","webpack:///./src/network/song/index.js","webpack:///./src/network/require.js"],"names":["playList_commentURL","mv_comentURL","new_mv","mv_url","similar_mv","mv_detail","introduce_mv","singerList","introduce_playList","update_playList_type","high_quality_playList","dvd","exclusive","playList_all_songId","song_detail","playList_subscribers","hotList","song_url","lyrics","swiper_url","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","staticClass","component","req_introduce_playList","context","params","require","req_update_playList_Tab","req_disc","req_unipue","req_playList_in_songAllid","req_song_detail","req_playList_subscribers","req_All_topList","req_song_url","req_lyric","url","axios","get"],"mappings":"yIAAA,W,oCCAA,wqBAOA,IAAMA,EAAsB,oBAEtBC,EAAe,cAKfC,EAAS,YAETC,EAAS,UAETC,EAAa,WAEbC,EAAY,aAEZC,EAAe,mBAIfC,EAAa,eAKbC,EAAqB,gBAErBC,EAAuB,gBAEvBC,EAAwB,4BAExBC,EAAM,aAENC,EAAY,+BAEZC,EAAsB,mBAEtBC,EAAc,eAEdC,EAAuB,wBAEvBC,EAAU,WAEVC,EAAW,WAEXC,EAAS,SAITC,EAAa,W,2CCvDnB,IAAIC,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAsBH,EAAII,MAAMC,GAAO,OAAOL,EAAIM,GAAG,IACnGC,EAAkB,CAAC,WAAa,IAAIP,EAAIC,KAASC,EAAGF,EAAIG,eAAmBE,EAAGL,EAAII,MAAMC,IAAIH,EAAG,OAAOG,EAAG,MAAM,CAACG,YAAY,WAAW,CAACH,EAAG,MAAM,CAACG,YAAY,wB,YCQlK,GACE,KAAF,UACE,QAFF,WAGI,KAAJ,cAEE,QAAF,CACI,WADJ,WAEM,OAAN,OAAM,CAAN,wBACQ,QAAR,aCjBqb,I,wBCQjbC,EAAY,eACd,EACAV,EACAQ,GACA,EACA,KACA,KACA,MAIa,aAAAE,E,2CCnBf,gXAkBA,SAASC,EAAuBC,GAAsB,IAAbC,EAAa,uDAAJ,GAC9C,OAAOC,eAAQ1B,OAAoByB,EAAQD,GAM/C,SAASG,EAAwBH,GAAsB,IAAbC,EAAa,uDAAJ,GAC/C,OAAOC,eAAQzB,OAAsBwB,EAAQD,GAajD,SAASI,EAASJ,GAAsB,IAAbC,EAAa,uDAAJ,GAChC,OAAOC,eAAQvB,OAAKsB,EAAQD,GAMhC,SAASK,EAAWL,GAAsB,IAAbC,EAAa,uDAAJ,GAClC,OAAOC,eAAQtB,OAAWqB,EAAQD,GAMtC,SAASM,EAA0BN,GAAsB,IAAbC,EAAa,uDAAJ,GACjD,OAAOC,eAAQrB,OAAqBoB,EAAQD,GAMhD,SAASO,EAAgBP,GAAsB,IAAbC,EAAa,uDAAJ,GACvC,OAAOC,eAAQpB,OAAamB,EAAQD,GAMxC,SAASQ,EAAyBR,GAAsB,IAAbC,EAAa,uDAAJ,GAChD,OAAOC,eAAQnB,OAAsBkB,EAAQD,GAMjD,SAASS,EAAgBT,GAAsB,IAAbC,EAAa,uDAAJ,GACvC,OAAOC,eAAQlB,OAASiB,EAAQD,GAMpC,SAASU,EAAaV,GAAsB,IAAbC,EAAa,uDAAJ,GACpC,OAAOC,eAAQjB,OAAUgB,EAAQD,GAMrC,SAASW,EAAUX,GAAsB,IAAbC,EAAa,uDAAJ,GACjC,OAAOC,eAAQhB,OAAQe,EAAQD,K,kCCjFnC,SAASE,EAAQU,EAAKX,EAAQD,GACzB,OAAOA,EAAQa,MAAMC,IAAIF,EAAK,CAC1BX,WAVT","file":"js/chunk-0cb754a2.581db657.js","sourcesContent":["export * from \"-!../../node_modules/_mini-css-extract-plugin@0.9.0@mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/_sass-loader@8.0.2@sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Ranking.vue?vue&type=style&index=0&lang=scss&\"","/**\r\n *  资源请求地址 \r\n */\r\n\r\n\r\n// comment\r\n// 获取歌单评论\r\nconst playList_commentURL = \"/comment/playlist\";\r\n//  获取 mv 评论\r\nconst mv_comentURL = \"/comment/mv\";\r\n\r\n\r\n// mv\r\n// 获取最新 MV\r\nconst new_mv = \"/mv/first\";\r\n// 获取 MV url\r\nconst mv_url = \"/mv/url\";\r\n// 获取相似 mv\r\nconst similar_mv = \"/simi/mv\";\r\n// 获取 mv 信息\r\nconst mv_detail = \"/mv/detail\";\r\n// 获取 推荐 MV\r\nconst introduce_mv = \"/personalized/mv\";\r\n\r\n// singer\r\n// 获取歌手列表\r\nconst singerList = \"/artist/list\";\r\n\r\n\r\n// song\r\n// 获取推荐歌单\r\nconst introduce_playList = \"/personalized\";\r\n// 更新歌单类型\r\nconst update_playList_type = \"/top/playlist\";\r\n// 获取高质量歌单\r\nconst high_quality_playList = \"/top/playlist/highquality\";\r\n// 获取新碟\r\nconst dvd = \"/top/album\";\r\n// 获取独家放送\r\nconst exclusive = \"/personalized/privatecontent\";\r\n// 获取歌单中歌曲的所有 id\r\nconst playList_all_songId = \"/playlist/detail\";\r\n// 获取歌曲的信息\r\nconst song_detail = \"/song/detail\";\r\n// 获取歌单收藏者\r\nconst playList_subscribers = \"/playlist/subscribers\"\r\n// 所有榜单\r\nconst hotList = \"/toplist\";\r\n// 获取音频\r\nconst song_url = \"song/url\";\r\n// 获取歌词\r\nconst lyrics = \"/lyric\";\r\n\r\n\r\n// 获取轮播图\r\nconst swiper_url = \"/banner\";\r\n\r\nexport {\r\n    playList_commentURL,\r\n    mv_comentURL,\r\n    new_mv,\r\n    mv_url,\r\n    similar_mv,\r\n    mv_detail,\r\n    introduce_mv,\r\n    singerList,\r\n    introduce_playList,\r\n    update_playList_type,\r\n    high_quality_playList,\r\n    dvd,\r\n    exclusive,\r\n    playList_all_songId,\r\n    song_detail,\r\n    playList_subscribers,\r\n    hotList,\r\n    song_url,\r\n    lyrics,\r\n    swiper_url,\r\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"ranking\"},[_c('div',{staticClass:\"music-container\"})])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"ranking\">\r\n       <div class=\"music-container\">\r\n\r\n       </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport {req_All_topList} from \"../network/song/index.js\";\r\n  export default {\r\n      name: \"Ranking\",\r\n      created() {\r\n         this.getToplist();\r\n      },\r\n      methods: {\r\n         getToplist() {\r\n             req_All_topList(this).then(res => {\r\n                 console.log(res);\r\n             })\r\n         }\r\n      }\r\n  }\r\n</script>\r\n<style lang=\"scss\">\r\n@import \"../assets/scss/music.scss\";\r\n    .ranking {\r\n        .music-container {\r\n\r\n        }\r\n    }\r\n</style>","import mod from \"-!../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--12-0!../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js!../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Ranking.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--12-0!../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js!../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Ranking.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Ranking.vue?vue&type=template&id=40b3bfba&\"\nimport script from \"./Ranking.vue?vue&type=script&lang=js&\"\nexport * from \"./Ranking.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Ranking.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { require } from \"../require\";\r\nimport { \r\n    introduce_playList, \r\n    update_playList_type, \r\n    high_quality_playList, \r\n    dvd, \r\n    exclusive, \r\n    playList_all_songId, \r\n    song_detail,\r\n    playList_subscribers, \r\n    hotList,\r\n    song_url,\r\n    lyrics,\r\n} from \"../url\";\r\n\r\n/**\r\n * 获取推荐歌单  playList\r\n */\r\nfunction req_introduce_playList(context, params = {}) {\r\n    return require(introduce_playList, params, context);\r\n}\r\n\r\n/**\r\n * 更新歌单类型 tab\r\n */\r\nfunction req_update_playList_Tab(context, params = {}) {\r\n    return require(update_playList_type, params, context);\r\n}\r\n\r\n/** \r\n*  高质量歌单 highquality\r\n*/\r\nfunction req_high_quality_playList(context, params = {}) {\r\n    return require(high_quality_playList, params, context);\r\n}\r\n\r\n/**\r\n * 获取新碟 disc\r\n */\r\nfunction req_disc(context, params = {}) {\r\n    return require(dvd, params, context);\r\n}\r\n\r\n/**\r\n * 获取独家放送 unipue\r\n */\r\nfunction req_unipue(context, params = {}) {\r\n    return require(exclusive, params, context);\r\n}\r\n\r\n/**\r\n * 获取歌单中歌曲的所有 id songAllid\r\n */\r\nfunction req_playList_in_songAllid(context, params = {}) {\r\n    return require(playList_all_songId, params, context);\r\n}\r\n\r\n/**\r\n * 获取歌曲的信息 songDetail\r\n */\r\nfunction req_song_detail(context, params = {}) {\r\n    return require(song_detail, params, context);\r\n}\r\n\r\n/**\r\n * 获取歌单收藏者 subscribers\r\n */\r\nfunction req_playList_subscribers(context, params = {}) {\r\n    return require(playList_subscribers, params, context);\r\n}\r\n\r\n/**\r\n * 所有榜单 toplist\r\n */\r\nfunction req_All_topList(context, params = {}) {\r\n    return require(hotList, params, context);\r\n}\r\n\r\n/**\r\n * 获取音频 songUrl\r\n */\r\nfunction req_song_url(context, params = {}) {\r\n    return require(song_url, params, context);\r\n}\r\n\r\n/**\r\n * 获取歌词  lyric\r\n */\r\nfunction req_lyric(context, params = {}) {\r\n    return require(lyrics, params, context);\r\n}\r\n\r\nexport {\r\n    req_introduce_playList,\r\n    req_update_playList_Tab,\r\n    req_high_quality_playList,\r\n    req_disc,\r\n    req_unipue,\r\n    req_playList_in_songAllid,\r\n    req_song_detail,\r\n    req_playList_subscribers,\r\n    req_All_topList,\r\n    req_song_url,\r\n    req_lyric\r\n}","/**\r\n * \r\n * @param {this} context \r\n * @param {object} params \r\n * @param {String} url \r\n * @returns  promise\r\n * \r\n */\r\nfunction require(url, params, context) {\r\n     return context.axios.get(url, {\r\n         params\r\n     })\r\n}\r\nexport {\r\n    require\r\n}"],"sourceRoot":""}