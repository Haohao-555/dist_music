{"version":3,"sources":["webpack:///./src/pages/Song.vue?024a","webpack:///src/pages/Song.vue","webpack:///./src/pages/Song.vue?d12e","webpack:///./src/pages/Song.vue","webpack:///./src/network/song/index.js","webpack:///./src/pages/Song.vue?e679"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","style","cover","staticRenderFns","name","components","data","id","url","parseLyric","trackIds","methods","getsongUrl","getlyric","getTrackIds","created","component","req_introduce_playList","context","params","require","introduce_playList","req_update_playList_Tab","update_playList_type","req_disc","dvd","req_unipue","exclusive","req_playList_in_songAllid","playList_all_songId","req_song_detail","song_detail","req_playList_subscribers","playList_subscribers","req_All_topList","hotList","req_song_url","song_url","req_lyric","lyrics","req_checkMusic","checkMusic"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,QAAQ,CAACF,EAAG,MAAM,CAACE,YAAY,WAAWF,EAAG,MAAM,CAACE,YAAY,KAAKC,MAAM,CAAE,mBAAoB,OAAOP,EAAIQ,MAAM,IAAI,mBAAoB,sBAAuBJ,EAAG,MAAM,CAACE,YAAY,uBACzSG,EAAkB,G,wBCiBtB,GACEC,KAAM,OACNC,WAAY,GACZC,KAHF,WAII,MAAO,CACLC,GAAI,EACJC,IAAK,GACLN,MAAO,GAEPO,WAAY,GACZC,SAAU,KAGdC,QAAS,CAEPC,WAFJ,WAEA,WACM,OAAN,OAAM,CAAN,mBACA,kBACQ,EAAR,qBAEA,mBACQ,QAAR,WAIIC,SAZJ,WAYA,WACM,OAAN,OAAM,CAAN,mBACA,kBACQ,EAAR,8CAEA,mBACQ,QAAR,WAIIC,YAtBJ,WAuBM,KAAN,6DAEM,KAAN,uBACM,KAAN,qDAGEC,QA1CF,WA2CIpB,KAAKiB,aACLjB,KAAKkB,WACLlB,KAAKmB,gBC/Dya,I,wBCQ9aE,EAAY,eACd,EACAvB,EACAU,GACA,EACA,KACA,WACA,MAIa,aAAAa,E,oECnBf,kZAmBA,SAASC,EAAuBC,GAAsB,IAAbC,EAAa,uDAAJ,GAC9C,OAAOC,eAAQC,OAAoBF,EAAQD,GAM/C,SAASI,EAAwBJ,GAAsB,IAAbC,EAAa,uDAAJ,GAC/C,OAAOC,eAAQG,OAAsBJ,EAAQD,GAajD,SAASM,EAASN,GAAsB,IAAbC,EAAa,uDAAJ,GAChC,OAAOC,eAAQK,OAAKN,EAAQD,GAMhC,SAASQ,EAAWR,GAAsB,IAAbC,EAAa,uDAAJ,GAClC,OAAOC,eAAQO,OAAWR,EAAQD,GAMtC,SAASU,EAA0BV,GAAsB,IAAbC,EAAa,uDAAJ,GACjD,OAAOC,eAAQS,OAAqBV,EAAQD,GAMhD,SAASY,EAAgBZ,GAAsB,IAAbC,EAAa,uDAAJ,GACvC,OAAOC,eAAQW,OAAaZ,EAAQD,GAMxC,SAASc,EAAyBd,GAAsB,IAAbC,EAAa,uDAAJ,GAChD,OAAOC,eAAQa,OAAsBd,EAAQD,GAMjD,SAASgB,EAAgBhB,GAAsB,IAAbC,EAAa,uDAAJ,GACvC,OAAOC,eAAQe,OAAShB,EAAQD,GAMpC,SAASkB,EAAalB,GAAsB,IAAbC,EAAa,uDAAJ,GACpC,OAAOC,eAAQiB,OAAUlB,EAAQD,GAMrC,SAASoB,EAAUpB,GAAsB,IAAbC,EAAa,uDAAJ,GACjC,OAAOC,eAAQmB,OAAQpB,EAAQD,GAMnC,SAASsB,EAAetB,GAAsB,IAAbC,EAAa,uDAAJ,GACtC,OAAOC,eAAQqB,OAAYtB,EAAQD,K,kCCjGvC","file":"js/chunk-05930b6f.f823ba82.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"song\"},[_c('div',{staticClass:\"bgmask\"}),_c('div',{staticClass:\"bg\",style:({'background-image': 'url('+_vm.cover+')','background-color': 'rgb(255,255,255)'})}),_c('div',{staticClass:\"music-contianer\"})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\n * @Date: 2021-10-23 17:12:17\r\n * @Author: 浩\r\n * @LastEditors: 浩\r\n * @FilePath: \\music\\src\\pages\\Song.vue\r\n-->\r\n<template>\r\n  <div class=\"song\">\r\n    <div class=\"bgmask\"></div>\r\n    <div class=\"bg\" :style=\"{'background-image': 'url('+cover+')','background-color': 'rgb(255,255,255)'}\"></div>\r\n    <div class=\"music-contianer\">\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { req_lyric, req_song_url } from \"../network/song/index.js\";\r\nimport tools from \"../tools/formatData.js\";\r\nexport default {\r\n  name: \"song\",\r\n  components: {},\r\n  data() {\r\n    return {\r\n      id: 0,\r\n      url: \"\",\r\n      cover: \"\",\r\n      // 歌词处理后\r\n      parseLyric: [],\r\n      trackIds: [],\r\n    };\r\n  },\r\n  methods: {\r\n    // 获取音频\r\n    getsongUrl() {\r\n      req_song_url(this, { id: this.id })\r\n        .then(res => {\r\n          this.url = res.data[0].url;\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    },\r\n    // 获取歌词\r\n    getlyric() {\r\n      req_lyric(this, { id: this.id })\r\n        .then(res => {\r\n          this.parseLyric = tools._parseLyric(res.lrc.lyric);\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }, \r\n    // 从缓存中获取 trackIds\r\n    getTrackIds() {\r\n       this.trackIds = JSON.parse(window.localStorage.getItem(\"playList\"));\r\n       // 初始化\r\n       this.id = this.trackIds[0].id;\r\n       this.cover = window.localStorage.getItem(\"playListCover\");\r\n    },\r\n  },\r\n  created() {\r\n    this.getsongUrl();\r\n    this.getlyric();\r\n    this.getTrackIds();\r\n  },\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n@import \"../assets/scss/music.scss\";\r\n.song {\r\n  position: relative;\r\n  z-index: 3;\r\n  // 用于测试\r\n  width: 100vw;\r\n  height: 100vh;\r\n  \r\n  .bg {\r\n    position: absolute;\r\n    @include bgmask();\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    z-index: -1;\r\n  }\r\n  .bgmask {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    background-color: rgba(0, 0, 0, 0.35);\r\n    z-index: -2;\r\n  }\r\n  .music-container {\r\n\r\n    z-index: 3;\r\n  }\r\n}\r\n// 隐藏浏览器掉滚轮\r\nhtml {\r\n  -ms-overflow-style: none;\r\n  overflow: -moz-scrollbars-none;\r\n}\r\nhtml::-webkit-scrollbar {\r\n  width: 0px;\r\n}\r\n</style>","import mod from \"-!../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--12-0!../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js!../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Song.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--12-0!../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js!../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Song.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Song.vue?vue&type=template&id=7898d885&scoped=true&\"\nimport script from \"./Song.vue?vue&type=script&lang=js&\"\nexport * from \"./Song.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Song.vue?vue&type=style&index=0&id=7898d885&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7898d885\",\n  null\n  \n)\n\nexport default component.exports","import { require } from \"../require\";\r\nimport {\r\n    introduce_playList,\r\n    update_playList_type,\r\n    high_quality_playList,\r\n    dvd,\r\n    exclusive,\r\n    playList_all_songId,\r\n    song_detail,\r\n    playList_subscribers,\r\n    hotList,\r\n    song_url,\r\n    lyrics,\r\n    checkMusic,\r\n} from \"../url\";\r\n\r\n/**\r\n * 获取推荐歌单  playList\r\n */\r\nfunction req_introduce_playList(context, params = {}) {\r\n    return require(introduce_playList, params, context);\r\n}\r\n\r\n/**\r\n * 更新歌单类型 tab\r\n */\r\nfunction req_update_playList_Tab(context, params = {}) {\r\n    return require(update_playList_type, params, context);\r\n}\r\n\r\n/** \r\n*  高质量歌单 highquality\r\n*/\r\nfunction req_high_quality_playList(context, params = {}) {\r\n    return require(high_quality_playList, params, context);\r\n}\r\n\r\n/**\r\n * 获取新碟 disc\r\n */\r\nfunction req_disc(context, params = {}) {\r\n    return require(dvd, params, context);\r\n}\r\n\r\n/**\r\n * 获取独家放送 unipue\r\n */\r\nfunction req_unipue(context, params = {}) {\r\n    return require(exclusive, params, context);\r\n}\r\n\r\n/**\r\n * 获取歌单中歌曲的所有 id songAllid\r\n */\r\nfunction req_playList_in_songAllid(context, params = {}) {\r\n    return require(playList_all_songId, params, context);\r\n}\r\n\r\n/**\r\n * 获取歌曲的信息 songDetail\r\n */\r\nfunction req_song_detail(context, params = {}) {\r\n    return require(song_detail, params, context);\r\n}\r\n\r\n/**\r\n * 获取歌单收藏者 subscribers\r\n */\r\nfunction req_playList_subscribers(context, params = {}) {\r\n    return require(playList_subscribers, params, context);\r\n}\r\n\r\n/**\r\n * 所有榜单 toplist\r\n */\r\nfunction req_All_topList(context, params = {}) {\r\n    return require(hotList, params, context);\r\n}\r\n\r\n/**\r\n * 获取音频 songUrl\r\n */\r\nfunction req_song_url(context, params = {}) {\r\n    return require(song_url, params, context);\r\n}\r\n\r\n/**\r\n * 获取歌词  lyric\r\n */\r\nfunction req_lyric(context, params = {}) {\r\n    return require(lyrics, params, context);\r\n}\r\n\r\n/**\r\n * 判断歌曲是否可以播放\r\n */\r\nfunction req_checkMusic(context, params = {}) {\r\n    return require(checkMusic, params, context);\r\n}\r\nexport {\r\n    req_introduce_playList,\r\n    req_update_playList_Tab,\r\n    req_high_quality_playList,\r\n    req_disc,\r\n    req_unipue,\r\n    req_playList_in_songAllid,\r\n    req_song_detail,\r\n    req_playList_subscribers,\r\n    req_All_topList,\r\n    req_song_url,\r\n    req_lyric,\r\n    req_checkMusic\r\n}","export * from \"-!../../node_modules/_mini-css-extract-plugin@0.9.0@mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/_sass-loader@8.0.2@sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Song.vue?vue&type=style&index=0&id=7898d885&lang=scss&scoped=true&\""],"sourceRoot":""}